{% extends '::base.html.twig' %}

{% block sidebar %}{% endblock %}

{% block body %}
    <h3>{{ 'Launch my project'|trans() }}</h3>
    
    <div>
		    {{ 'Steps'|trans() }}
		    {% include 'CraueFormFlowBundle:FormFlow:stepList.html.twig' %}
		</div>
		
		{% if flow.getCurrentStepNumber() == 3 %}
				<div class="modal fade" id="fileModal" tabindex="-1" role="dialog" aria-labelledby="{{ 'Upload new file'|trans() }}" aria-hidden="true">
			    <div class="modal-dialog">
			      <div class="modal-content">
			        <div class="modal-header">
			          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
			          <h4 class="modal-title">{{ 'Upload new file'|trans() }}</h4>
			        </div>
			        <div class="modal-body">
			          <form id="uploadFileForm" method="POST" action="#" enctype="multipart/form-data">
			          		<p><input type="file" id="fileName" name="fileName" /></p>
			          		<div id="fileProgress" class="progress">
												<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
										</div>
			          		<p><input type="submit" class="btn btn-primary" id="uploadFileFormSubmit" value="{{ 'Upload'|trans() }}" /></p>
			          </form>
			        </div>
			        <div class="modal-footer">
			          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			        </div>
			      </div><!-- /.modal-content -->
			    </div><!-- /.modal-dialog -->
			  </div>			
			  
			  <div class="modal fade" id="audioFileModal" tabindex="-1" role="dialog" aria-labelledby="{{ 'Upload new audio file'|trans() }}" aria-hidden="true">
			    <div class="modal-dialog">
			      <div class="modal-content">
			        <div class="modal-header">
			          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
			          <h4 class="modal-title">{{ 'Upload new audio file'|trans() }}</h4>
			        </div>
			        <div class="modal-body">
			          <form id="uploadAudioFileForm" method="POST" action="#" enctype="multipart/form-data">
			          		<p><input type="file" id="audioFileName"  name="audioFileName" /></p>
			          		<div id="audioFileProgress" class="progress">
												<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
										</div>
										<p><input type="submit" class="btn btn-primary" id="uploadAudioFileFormSubmit" value="{{ 'Upload'|trans() }}" /></p>
			          </form>
			        </div>
			        <div class="modal-footer">
			          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			        </div>
			      </div><!-- /.modal-content -->
			    </div><!-- /.modal-dialog -->
			  </div>				
		{% endif %}
				  		
		<form method="POST" {{ form_enctype(form) }}>
		    {{ form_errors(form) }}
				
				{% if flow.getCurrentStepNumber() == 4 %}
		        <ul class="rewards" data-prototype="{{ form_widget(form.rewards.vars.prototype)|e }}">
				        {% for reward in form.rewards %}
				            <li>
				            	{{ form_row(reward.title) }}
											{{ form_row(reward.description) }}
											{{ form_row(reward.amount) }}
											{{ form_row(reward.stock) }}
											{{ form_row(reward.maxQuantityByUser) }}
										</li>
				        {% endfor %}
				    </ul>
				{% elseif flow.getCurrentStepNumber() == 5 %}
						<p>{{ 'Verification'|trans() }}</p>
						
						<div style="border:1px dotted gray; padding: 20px;margin-bottom: 20px;float:left;;">
							{% render(controller('LittleBigJoeFrontendBundle:Project:preview', { 'entity':form.vars.value })) %}
						</div>
		    {% endif %}				
		    		    
				{{ form_rest(form) }}
		
		    {% include 'CraueFormFlowBundle:FormFlow:buttons.html.twig' %}
		</form>
{% endblock %}

{% block footer_javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/littlebigjoefrontend/js/vendor/jquery.ui.widget.js') }}"></script>
		<script src="{{ asset('bundles/littlebigjoefrontend/js/jquery.iframe-transport.js') }}"></script>
		<script src="{{ asset('bundles/littlebigjoefrontend/js/jquery.fileupload.js') }}"></script>
    <script type="text/javascript">
    		var addRewardLabel = "{{ 'Add new reward'|trans() }}";
    		var deleteRewardLabel = "{{ 'Delete reward'|trans() }}";
    		var addFileLabel = "{{ 'Add new file'|trans() }}";
    		var addAudioFileLabel = "{{ 'Add new audio file'|trans() }}";
    		var selectAFileLabel = "{{ 'Please select a file before submitting the form'|trans() }}";
    		var wrongFileTypeLabel = "{{ 'The file type is not authorized. Authorized types are : .pdf, .xml, .zip, .csv, .txt, .doc'|trans() }}";
    		var wrongAudioFileTypeLabel = "{{ 'The file type is not authorized. Authorized audio types are : .mpeg, .mp3, .mp4, .wma, .wav'|trans() }}";
				var fileSizeLabel = "{{ 'The file size is too big. Please upload files that do not exceed 20Mo'|trans() }}";
				var audioFileSizeLabel = "{{ 'The file size is too big. Please upload audio files that do not exceed 20Mo'|trans() }}";
				
    		$(document).ready(function () {    				
    				// STEP 1  
            $('#createProject_name').on('keyup', null, function () {
                var rExps = [
                    {re: /[\xC0-\xC6]/g, ch: 'A'},
                    {re: /[\xE0-\xE6]/g, ch: 'a'},
                    {re: /[\xC8-\xCB]/g, ch: 'E'},
                    {re: /[\xE8-\xEB]/g, ch: 'e'},
                    {re: /[\xCC-\xCF]/g, ch: 'I'},
                    {re: /[\xEC-\xEF]/g, ch: 'i'},
                    {re: /[\xD2-\xD6]/g, ch: 'O'},
                    {re: /[\xF2-\xF6]/g, ch: 'o'},
                    {re: /[\xD9-\xDC]/g, ch: 'U'},
                    {re: /[\xF9-\xFC]/g, ch: 'u'},
                    {re: /[\xC7-\xE7]/g, ch: 'c'},
                    {re: /[\xD1]/g, ch: 'N'},
                    {re: /[\xF1]/g, ch: 'n'}
                ];
                var title_value = $(this).val();

                for (var i = 0, len = rExps.length; i < len; i++)
                    title_value = title_value.replace(rExps[i].re, rExps[i].ch);

                title_value = title_value.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '').replace(/\-{2,}/g, '-');
                $('#createProject_slug').val(title_value);
            });   
            
            // STEP 3             
            // Add buttons to download files 
            $('#createProject_description').after('<div class="clearfix">&nbsp;</div><button id="addFile" class="btn btn-info" data-toggle="modal" data-target="#fileModal">' + addFileLabel + '</button>&nbsp;&nbsp;<button id="addAudioFile" class="btn btn-info" data-toggle="modal" data-target="#audioFileModal">' + addAudioFileLabel + '</button>'); 
            $('#fileName').fileupload({
                dataType: 'json',
                url: "{{ path('littlebigjoe_frontendbundle_ajax_upload_file') }}",
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#fileProgress .progress-bar').css('width', progress + '%');
                    $('#fileProgress .progress-bar').attr('aria-valuenow', progress);
                },
                done: function (e, data) {
                		console.log(data.result);
                		if (data.result.status == 'OK' && data.result.html != '')
        						{   
		                		$('#fileProgress .progress-bar').css('width', '100%');
		                    $('#fileProgress .progress-bar').attr('aria-valuenow', '100');
		                    $('#fileModal').modal('hide');
		                    CKEDITOR.instances['createProject_description'].insertHtml(data.result.html);
		                    $('#fileName').val('');
				            		$('#fileProgress .progress-bar').css('width', '0%');
				                $('#fileProgress .progress-bar').attr('aria-valuenow', '0');
        						}
                		else if (data.result.status == 'KO USER')
                		{
                				window.location = "{{ path('fos_user_security_login') }}";
                		}
                		else if (data.result.status == 'KO FILE')
                		{
                				$('#fileProgress .progress-bar').css('width', '0%');
		                    $('#fileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(selectAFileLabel);
                		}
                		else if (data.result.status == 'KO SIZE')
                		{
                				$('#fileProgress .progress-bar').css('width', '0%');
		                    $('#fileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(fileSizeLabel);
                		}
                		else if (data.result.status == 'KO TYPE')
                		{
                				$('#fileProgress .progress-bar').css('width', '0%');
		                    $('#fileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(wrongFileTypeLabel);
                		}
                }
            });
            $('#audioFileName').fileupload({
                dataType: 'json',
                url: "{{ path('littlebigjoe_frontendbundle_ajax_upload_audio_file') }}",
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#audioFileProgress .progress-bar').css('width', progress + '%');
                    $('#audioFileProgress .progress-bar').attr('aria-valuenow', progress);
                },
                done: function (e, data) {
                		console.log(data.result);
                		if (data.result.status == 'OK' && data.result.html != '')
        						{   
		                		$('#audioFileProgress .progress-bar').css('width', '100%');
		                    $('#audioFileProgress .progress-bar').attr('aria-valuenow', '100');
		                    $('#audioFileModal').modal('hide');
		                    CKEDITOR.instances['createProject_description'].insertHtml('<div class="ck_object_container">' + data.result.html + '</div>');
		                    $('#audioFileName').val('');
				            		$('#audioFileProgress .progress-bar').css('width', '0%');
				                $('#audioFileProgress .progress-bar').attr('aria-valuenow', '0');
        						}
                		else if (data.result.status == 'KO USER')
                		{
                				window.location = "{{ path('fos_user_security_login') }}";
                		}
                		else if (data.result.status == 'KO FILE')
                		{
                				$('#audioFileProgress .progress-bar').css('width', '0%');
		                    $('#audioFileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(selectAFileLabel);
                		}
                		else if (data.result.status == 'KO SIZE')
                		{
                				$('#fileProgress .progress-bar').css('width', '0%');
		                    $('#fileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(audioFileSizeLabel);
                		}
                		else if (data.result.status == 'KO TYPE')
                		{
                				$('#audioFileProgress .progress-bar').css('width', '0%');
		                    $('#audioFileProgress .progress-bar').attr('aria-valuenow', '0');
                				alert(wrongAudioFileTypeLabel);
                		}
                }
            });
            
            // STEP 4 
            // Handle rewards 
						var collectionHolder = $('ul.rewards');
						var $addRewardLink = $('<a href="#" class="btn btn-success">' + addRewardLabel + '</a>');
						var $newLinkLi = $('<li></li>').append($addRewardLink);
						
						collectionHolder.append($newLinkLi);
						collectionHolder.find('li.added').each(function() {
				        addRewardFormDeleteLink($(this));
				    });
						
				    $addRewardLink.on('click', function(e) {
				        e.preventDefault();
								addRewardForm(collectionHolder, $newLinkLi);
				    });
				    
				    function addRewardForm(collectionHolder, $newLinkLi) {
				        var prototype = collectionHolder.attr('data-prototype');
								var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);
								var $newFormLi = $('<li class="added"></li>').append(newForm);
								
				        $newLinkLi.before($newFormLi);
				        addRewardFormDeleteLink($newFormLi);
				    }
				    
				    function addRewardFormDeleteLink($rewardFormLi) {
				        var $removeFormA = $('<a href="#" class="btn btn-danger">' + deleteRewardLabel + '</a>');
				        $rewardFormLi.append($removeFormA);

				        $removeFormA.on('click', function(e) {
				            e.preventDefault();
										$rewardFormLi.remove();
				        });
				    }
        });
    </script>
{% endblock %}