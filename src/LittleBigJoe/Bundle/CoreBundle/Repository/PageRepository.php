<?php

namespace LittleBigJoe\Bundle\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository
{
    /**
     * Return the number of pages
     *
     * @param boolean/null $visible :
     *        if set to null, return all pages
     *        if set to true, return all visible pages
     *        if set to false, return all invisible pages
     * @return int nbPages
     */
    public function count($visible = null)
    {
        $qb = $this->createQueryBuilder('p')->select('COUNT(p)');

        if (is_bool($visible)) {
            $qb = $qb->where('p.isVisible = :isVisible')->setParameter('isVisible', $visible);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * Find by slug, indepently from the language
     *
     * @param string $slug : contains slug
     * @return object entity
     */
    public function findBySlugI18n($slug)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM LittleBigJoeCoreBundle:Page p WHERE p.slug LIKE :slug')
            ->setParameter('slug', '%' . $slug . '%')
            ->setHint(
                \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
                'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
            )
            ->getSingleResult();
    }
}
