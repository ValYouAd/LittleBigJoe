<?php

namespace LittleBigJoe\Bundle\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
    /**
     * Return the number of categories
     *
     * @param boolean/null $visible :
     *        if set to null, return all categories
     *        if set to true, return all visible categories
     *        if set to false, return all invisible categories
     * @return int nbCategories
     */
    public function count($visible = null)
    {
        $qb = $this->createQueryBuilder('c')
            ->select('COUNT(c)');

        if (is_bool($visible)) {
            $qb = $qb->where('c.isVisible = :isVisible')
                ->setParameter('isVisible', $visible);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * Find by slug, indepently from the language
     *
     * @param string $slug : contains slug
     * @return object entity
     */
    public function findBySlugI18n($slug)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM LittleBigJoeCoreBundle:Category c WHERE c.slug LIKE :slug AND c.isVisible = :isVisible')
            ->setParameters(array(
            		'slug' => '%' . $slug . '%',
            		'isVisible' => true
           	))
            ->setHint(
                \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
                'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
            )
            ->getSingleResult();
    }
}
